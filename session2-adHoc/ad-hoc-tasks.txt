Task 1
Create a file named "testfile" using ad-hoc command under /tmp:
ansible localhost -m file -a "state=touch path= /tmp/testfile1"
to check the file presence with ansible ad-hoc command - ansible localhost -m shell -a "ll /tmp"

Task2 
Add user Anna with uid-1050 using ansible ad-hoc command:
ansible localhost -m user -a "state=present name=Anna uid=1050"
result check ansible localhost -m shell -a "tail -n 4 /etc/passwd"

Task3
Change the ownership of the "testfile1" usng ad-hoc command:
ansible localhost -m file -a "owner=Anna path=/tmp/testfile1"
to check the changes we need to run ansible localhost -m shell -a "ls-l /tmp/"
and if you want to add group name you need to add to the user module "group=anna"

Task4
Install "vim, Wget, htop" using ad-hoc commands
We need to use "Yum" module to install packages since we are on CentOS
ansible localhost -m yum -a "name=vim state=installed"
ansible localhost -m yum -a "name=htop state=installed"
ansible localhost -m yum -a "name=Wget state=installed"

Task5
Install apache using ad-hoc command
ansible localhost -m yum -a "name=httpd state=installed"

Task6
Start and enable apache using ansible ad-hoc command
ansible localhost -m systemd -a "name=httpd state=started enabled=yes"
to check if the apache is running or not ansible localhost -m shell -a "systemctl status httpd"

Task7
Using ansible ad-hoc command stop apache service
ansible localhost -m systemd -a "name=httpd status=stopped"

Task8
Using ansible ad-hoc command remove apache
ansible localhost -m yum -a "name=httpd state=removed"



